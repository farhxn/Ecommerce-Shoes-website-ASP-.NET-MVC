
@{
    ViewBag.Title = "Add Product";
    Layout = "~/Views/Shared/adminLayout.cshtml";
}
@model shoes.Models.Product
<div class="col-lg-12">
    <div class="white_card card_height_100 mb_30">
        <div class="white_card_header">
            <div class="box_header m-0">
                <div class="main-title">
                    <h3 class="m-0">Add Product</h3>
                </div>
            </div>
        </div>
        <div class="white_card_body">
            <div class="card-body">
                @using (Html.BeginForm("AddProduct", "Admin", FormMethod.Post, new { @enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()
                <form>
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    @Html.EditorFor(model => model.createdAt, new { htmlAttributes = new { @class = "form-control", @Hidden = "hidden", @Value = DateTime.Now } })
                    @Html.EditorFor(model => model.updatedAt, new { htmlAttributes = new { @class = "form-control", @Hidden = "hidden", @Value = DateTime.Now } })



                    <div class="row mb-3">
                        <div class="col-md-12">
                            <label class="form-label" for="inputEmail4">Product Name</label>
                            @Html.EditorFor(model => model.P_name, new { htmlAttributes = new { @class = "form-control", @placeholder = "Product Name", required = "required" } })
                            @Html.ValidationMessageFor(model => model.P_name, "", new { @class = "text-danger" })
                        </div>

                    </div>
                    <div class="mb-3">
                        <label class="form-label" for="inputAddress">Product Description</label>
                        @Html.EditorFor(model => model.P_desc, new { htmlAttributes = new { @class = "form-control", @placeholder = "Product Description", required = "required" } })
                        @Html.ValidationMessageFor(model => model.P_desc, "", new { @class = "text-danger" })
                    </div>


                    <div class="row mb-3">
                        <div class=" col-md">
                            <div class="mb-3">
                                <label class="form-label" for="inputAddress">Product Price</label>
                                @Html.EditorFor(model => model.P_price, new { htmlAttributes = new { @class = "form-control", @placeholder = "Product Price", required = "required", @type = "number", min = "0", } })
                                @Html.ValidationMessageFor(model => model.P_price, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class=" col-md">
                            <div class="mb-3">
                                <label class="form-label" for="inputAddress">Product Discounted Price</label>
                                @Html.EditorFor(model => model.P_dprice, new { htmlAttributes = new { @class = "form-control", @placeholder = "Product Discounted Price", type = "number", min = "10", } })
                                @Html.ValidationMessageFor(model => model.P_dprice, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>




                    <div class="row mb-3">
                        <div class=" col-md">
                            <br />
                            <div class="input-group mb-3">
                                <div class="input-group-text">
                                    <label for="inputGroupSelect01">Product Category</label>
                                </div>
                                <select required class="form-select" id="inputGroupSelect01" name="cat">
                                    <option selected disabled >Choose Category...</option>
                                    <option value="New Product">New Product</option>
                                    <option value="Hot Selling">Hot Selling</option>
                                    @{var faq = ViewBag.options;
                                        foreach (var item in faq)
                                        {
                                            <option value="@item.C_name">@item.C_name</option>
                                        } }

                                </select>
                            </div>
                            </div>

                        <div class="col-md">
                            <div class="mb-3">
                                <label class="form-label" for="inputAddress">Product Stock</label>
                                @Html.EditorFor(model => model.P_stock, new { htmlAttributes = new { @class = "form-control", @placeholder = "Product Stock", type = "number", min = "10", required = "required", } })
                                @Html.ValidationMessageFor(model => model.P_stock, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>



                    <div class="row mb-3">

                        <div class=" col-md">
                            <div class="input-group mb-3">
                                <input required type="file" name="file1" class="form-control" accept="image/*" id="inputGroupFile02">
                                @Html.ValidationMessageFor(model => model.P_img2, "", new { @class = "text-danger" })
                                <label class="input-group-text" for="inputGroupFile02">Product Image 1</label>
                            </div>
                        </div>
                    </div>

                    <div class="row mb-3">
                        <div class=" col-md">
                            <div class="input-group mb-3">
                                <input required type="file" name="file2" class="form-control" accept="image/*" id="inputGroupFile02">
                                @Html.ValidationMessageFor(model => model.P_img1, "", new { @class = "text-danger" })
                                <label class="input-group-text" for="inputGroupFile02">Product Image 2</label>
                            </div>
                        </div>

                        <div class=" col-md">
                            <div class="input-group mb-3">
                                <input required type="file" name="file3" class="form-control" accept="image/*" id="inputGroupFile02">
                                @Html.ValidationMessageFor(model => model.P_img3, "", new { @class = "text-danger" })
                                <label class="input-group-text" for="inputGroupFile02">Product Image 3</label>
                            </div>
                        </div>
                    </div>

                    <button type="submit" class="btn btn-primary">Save</button>

                </form>

                }


            </div>

        </div>
    </div>
</div>


@if (TempData["Success"] != null && TempData["Success"].ToString() == "Success")
{
    <script>
        Swal.fire({
            title: "Success",
            text: "Product Added Successfully",
            icon: "success"
        });
    </script>
}

@if (TempData["Error"] != null && TempData["Error"].ToString() == "Error")
{
    <script>
        Swal.fire({
            title: "Error",
            text: TempData["Msg"],
            icon: "error"
        });
    </script>
}