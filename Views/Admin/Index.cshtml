
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/adminLayout.cshtml";
}
@model IEnumerable<shoes.Models.Billing>
<div class="container-fluid p-0 ">
    <div class="row ">
        <div class="col-lg-12">
            <div class="single_element">
                <div class="quick_activity">
                    <div class="row">
                        <div class="col-12">
                            <div class="quick_activity_wrap">

                                <div class="single_quick_activity">
                                    <div class="count_content">
                                        <p>Products</p>
                                        <h3><span class="counter">@ViewBag.Product</span> </h3>
                                    </div>
                                    <a href="#" class="notification_btn">All Over</a>
                                    <div id="bar1" class="barfiller">
                                        <div class="tipWrap">
                                            <span class="tip"></span>
                                        </div>
                                        <span class="fill" data-percentage=@ViewBag.Product></span>
                                    </div>
                                </div>

                                <div class="single_quick_activity">
                                    <div class="count_content">
                                        <p>Orders</p>
                                        <h3><span class="counter">@ViewBag.Orders</span> </h3>
                                    </div>
                                    <a href="#" class="notification_btn yellow_btn">All Over</a>
                                    <div id="bar2" class="barfiller">
                                        <div class="tipWrap">
                                            <span class="tip"></span>
                                        </div>
                                        <span class="fill" data-percentage=@ViewBag.Orders></span>
                                    </div>
                                </div>

                                <div class="single_quick_activity">
                                    <div class="count_content">
                                        <p>Users</p>
                                        <h3><span class="counter">@ViewBag.User</span> </h3>
                                    </div>
                                    <a href="#" class="notification_btn green_btn">All Over</a>
                                    <div id="bar3" class="barfiller">
                                        <div class="tipWrap">
                                            <span class="tip"></span>
                                        </div>
                                        <span class="fill" data-percentage=@ViewBag.User></span>
                                    </div>
                                </div>

                                <div class="single_quick_activity">
                                    <div class="count_content">
                                        <p>Sliders</p>
                                        <h3><span class="counter">@ViewBag.Slider</span></h3>
                                    </div>
                                    <a href="#" class="notification_btn violate_btn">All Over</a>
                                    <div id="bar4" class="barfiller">
                                        <div class="tipWrap">
                                            <span class="tip"></span>
                                        </div>
                                        <span class="fill" data-percentage=@ViewBag.Slider></span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-lg-12">
            <div class="white_card card_height_100 mb_30 QA_section">
                <div class="white_card_header">
                    <div class="box_header m-0">
                        <div class="main-title">
                            <h3 class="m-0">Order List</h3>
                        </div>
                        <div class="header_more_tool">
                            <div class="dropdown">
                                <span class="dropdown-toggle" id="dropdownMenuButton" data-bs-toggle="dropdown">
                                    <i class="ti-more-alt"></i>
                                </span>
                                <div class="dropdown-menu dropdown-menu-right" aria-labelledby="dropdownMenuButton">
                                    @*<a class="dropdown-item" href="#"> <i class="ti-eye"></i> Action</a>
                                        <a class="dropdown-item" href="#"> <i class="ti-trash"></i> Delete</a>
                                        <a class="dropdown-item" href="#"> <i class="fas fa-edit"></i> Edit</a>
                                        <a class="dropdown-item" href="#"> <i class="ti-printer"></i> Print</a>
                                        <a class="dropdown-item" href="#"> <i class="fa fa-download"></i> Download</a>*@
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="white_card_body">
                    <div class="QA_table table-responsive ">

                        <table class="table pt-0">
                            <thead>
                                <tr class="text-center">
                                    <th scope="col">User Name</th>
                                    <th scope="col">Product ID</th>
                                    <th scope="col">Order ID</th>
                                    <th scope="col">Status</th>
                                    <th scope="col">Action</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model)
                                {

                                    <tr class="text-center">

                                        <th scope="row">
                                            <a href="#" class="question_content">
                                                @item.B_first @item.B_last
                                            </a>
                                        </th>
                                        <td>@item.P_id</td>
                                        <td>@item.O_id</td>
                                        <td>@item.O_status</td>

                                        <td> <button onclick='@(item.O_status == "Delivered" ? "" : $"dlte({item.B_id})")' class="btn btn-sm btn-success text-white"><i class="material-icons">beenhere</i></button></td>

                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>

    if (jQuery("#iq-chart-order").length) {
        am4core.ready(function () {
            am4core.useTheme(am4themes_animated);
            var chart = am4core.create("iq-chart-order", am4charts.XYChart);
            chart.colors.list = [
                am4core.color("#1e3d73"),
                am4core.color("#fe517e"),
                am4core.color("#99f6ca"),
                am4core.color("#ffbf43"),
                am4core.color("#9267ff"),
                am4core.color("#1e3d73"),
                am4core.color("#fe517e"),
                am4core.color("#99f6ca"),
                am4core.color("#ffbf43"),
                am4core.color("#9267ff"),
                am4core.color("#1e3d73"),
                am4core.color("#fe517e"),
            ];
            chart.data = [
                { country: "USA", visits: 2025 },
                { country: "China", visits: 1882 },
                { country: "Japan", visits: 1809 },
                { country: "Germany", visits: 1322 },
                { country: "UK", visits: 1122 },
                { country: "France", visits: 1114 },
                { country: "India", visits: 984 },
                { country: "Spain", visits: 711 },
                { country: "Netherlands", visits: 665 },
                { country: "Russia", visits: 580 },
                { country: "South Korea", visits: 443 },
                { country: "Canada", visits: 441 },
            ];
            chart.padding(40, 40, 40, 40);
            var categoryAxis = chart.xAxes.push(new am4charts.CategoryAxis());
            categoryAxis.renderer.grid.template.location = 0;
            categoryAxis.dataFields.category = "country";
            categoryAxis.renderer.minGridDistance = 60;
            categoryAxis.renderer.inversed = true;
            categoryAxis.renderer.grid.template.disabled = true;
            var valueAxis = chart.yAxes.push(new am4charts.ValueAxis());
            valueAxis.min = 0;
            valueAxis.extraMax = 0.1;
            var series = chart.series.push(new am4charts.ColumnSeries());
            series.dataFields.categoryX = "country";
            series.dataFields.valueY = "visits";
            series.tooltipText = "{valueY.value}";
            series.columns.template.strokeOpacity = 0;
            series.columns.template.column.cornerRadiusTopRight = 10;
            series.columns.template.column.cornerRadiusTopLeft = 10;
            var labelBullet = series.bullets.push(new am4charts.LabelBullet());
            labelBullet.label.verticalCenter = "bottom";
            labelBullet.label.dy = -10;
            labelBullet.label.text = "{values.valueY.workingValue.formatNumber('#.')}";
            chart.zoomOutButton.disabled = true;
            series.columns.template.adapter.add("fill", function (fill, target) {
                return chart.colors.getIndex(target.dataItem.index);
            });
            setInterval(function () {
                am4core.array.each(chart.data, function (item) {
                    item.visits += Math.round(Math.random() * 200 - 100);
                    item.visits = Math.abs(item.visits);
                });
                chart.invalidateRawData();
            }, 2000);
            categoryAxis.sortBySeries = series;
        });
    }
    if (jQuery("#iq-chart-efficient").length) {
        am4core.ready(function () {
            am4core.useTheme(am4themes_animated);
            var chart = am4core.create("iq-chart-efficient", am4charts.PieChart);
            chart.hiddenState.properties.opacity = 0;
            chart.data = [
                { country: "Lithuania", value: 260 },
                { country: "Czechia", value: 230 },
                { country: "Ireland", value: 200 },
                { country: "Germany", value: 165 },
                { country: "Australia", value: 139 },
                { country: "Austria", value: 128 },
            ];
            var series = chart.series.push(new am4charts.PieSeries());
            series.dataFields.value = "value";
            series.dataFields.radiusValue = "value";
            series.dataFields.category = "country";
            series.slices.template.cornerRadius = 6;
            series.colors.step = 3;
            series.colors.list = [
                am4core.color("#1e3d73"),
                am4core.color("#fe517e"),
                am4core.color("#ffbf43"),
                am4core.color("#99f6ca"),
                am4core.color("#9267ff"),
                am4core.color("#FF6F91"),
            ];
            series.labels.template.disabled = true;
            series.hiddenState.properties.endAngle = -90;
        });
    }

</script>


<script>


    function dlte(id) {
    const swalWithBootstrapButtons = Swal.mixin({
        // ... your Swal settings
    });

    swalWithBootstrapButtons.fire({
        title: "Are you sure?",
        text: "You won't be able to revert this!",
        icon: "warning",
        showCancelButton: true,
        confirmButtonText: "Yes, Change Status!",
        cancelButtonText: "No, cancel!",
        reverseButtons: true
    }).then((result) => {
        if (result.isConfirmed) {
            // Make a GET request to delete the slider
            fetch('@Url.Action("ChangeOrderStatus", "Admin")?id=' + id)
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        swalWithBootstrapButtons.fire({
                            title: "Changed!",
                            text: data.message,
                            icon: "success"
                        });
                        window.location.reload();

                    } else {
                        swalWithBootstrapButtons.fire({
                            title: "Error",
                            text: data.message,
                            icon: "error"
                        });
                        window.location.reload();

                    }
                })
                .catch(error => {
                    swalWithBootstrapButtons.fire({
                        title: "Success",
                        text: "Status Changed Successfully",
                        icon: "success"
                    });
                    window.location.reload();

                });
        } else if (result.dismiss === Swal.DismissReason.cancel) {
            swalWithBootstrapButtons.fire({
                title: "Cancelled",
                text: "Your Contact Item is in pending :)",
                icon: "error"
            });
        }
    });
}

</script>


